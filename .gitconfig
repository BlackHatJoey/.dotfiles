[user]
	email = alphonse.mariya@hotmail.com
	name = Alphonse Mariya
	signingkey = 24D4C85E7B4585A9
[core]
	editor = vim
	whitespace = fix,trailing-space,cr-at-eol
[credential]
	helper = cache
[diff]
	tool = vimdiff
[difftool]
	prompt = false
[merge]
	tool = diffconflicts
[mergetool "diffconflicts"]
	cmd = diffconflicts vim $BASE $LOCAL $REMOTE $MERGED
	trustExitCode = true
[mergetool]
	keepBackup = false
[alias]
	l = log --format=oneline --abbrev-commit --all --decorate --color
	ls = log --format=short --abbrev-commit --all --decorate --color --stat
	lm = log --format=medium --abbrev-commit --all --decorate --color --stat
	ll = log --format=full --abbrev-commit --all --decorate --color --stat
	gl = log --format=oneline --abbrev-commit --all --decorate --color --graph
	gls = log --format=short --abbrev-commit --all --decorate --color --stat --graph
	glm = log --format=medium --abbrev-commit --all --decorate --color --stat --graph
	gll = log --format=full --abbrev-commit --all --decorate --color --stat --graph
	lc  = "!f() { git ll \"$1\"^..\"$1\"; }; f"
	lnc = log --format=oneline --abbrev-commit --all --decorate --no-color
	fl = log --patch --all --decorate --color

	d = diff
	ds = diff --stat
	dc = diff --cached
	dl = log --format=fuller --abbrev-commit --all --decorate --color --stat -1
	dlc = diff --cached HEAD~
	dr  = "!f() { git diff \"$1\"^..\"$1\"; }; f"
	grep = grep -Ii

	a = add
	au = add -u
	ai = add -i
	ap = add -p
	c = commit -S --verbose
	ca = commit -S --amend --verbose

	s = status -s -b
	co = checkout
	com = checkout master
	col = checkout -
	cob = checkout -b
	p = pull --rebase=interactive
	b = branch
	cp = cherry-pick
	cl = clone
	hub = "!f() { git clone git@github.com:\"$1\"; }; f"
	# list branches sorted by last modified
	lb = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

	r = rebase
	ri = rebase -i
	# rebase on master (never do this on a public branch!)
	rim = rebase -i master
	# rewrite history (never do this on a public branch!)
	rih = "!git rebase -i `git merge-base HEAD master`"

	# list aliases
	la = "!git config -l | grep alias | cut -c 7- | sed -e 's/=/\\t/' | column -s $'\\t' | less"

	# initialize repository in current directory
	this = "!git init && git commit -S -m 'root' --allow-empty"
